name: hosted-ninja-vcpkg-install-cacheoff
on: [push, workflow_dispatch]

jobs:
  job:
    name: ${{ matrix.os }}-${{ github.workflow }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:

      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Install system libraries on Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
            sudo apt-get update
            sudo apt install libxinerama-dev libxcursor-dev xorg-dev libglu1-mesa-dev pkg-config

      - name: Install system libraries on Mac OS
        if: matrix.os == 'macos-latest'
        run: |
                sudo apt-get update
                sudo apt install libxinerama-dev libxcursor-dev xorg-dev libglu1-mesa-dev

      - uses: lukka/get-cmake@latest
      - name: List $RUNNER_WORKSPACE before build
        run: find $RUNNER_WORKSPACE
        shell: bash

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        id: runvcpkg
        with:
          vcpkgDirectory: '${{ runner.workspace }}/vcpkg'
          # Run vcpkg with the command specified by the `runVcpkgFormatString` input.
          runVcpkgInstall: true
          vcpkgJsonGlob: '**/vcpkg.json'

      - name: Prints output of run-vcpkg's action.
        run: echo "root='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }}', triplet='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_DEFAULT_TRIPLET_OUT }}' "

      - name: Run CMake with Ninja
        uses: lukka/run-cmake@v10
        with:
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
          configurePreset: 'Release'
          buildPreset: 'Release'

      - name: List $RUNNER_WORKSPACE after build
        run: find $RUNNER_WORKSPACE
        shell: bash