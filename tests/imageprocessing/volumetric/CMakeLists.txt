add_executable(test_integrated_multithreaded_reconstruction test_integrated_multithreaded_solution.cpp)

target_compile_definitions(test_integrated_multithreaded_reconstruction PRIVATE vsgXchange_FOUND)
target_compile_definitions(test_integrated_multithreaded_reconstruction PRIVATE CURAN_COPIED_RESOURCE_PATH="${post_build_resource_path}")
target_link_libraries(test_integrated_multithreaded_reconstruction
PUBLIC
communication
renderable
imageprocessing
${ITK_LIBRARIES}
)

add_executable(test_volume_reconstruction test_volume_creation.cpp)

target_compile_definitions(test_volume_reconstruction PRIVATE vsgXchange_FOUND)
target_compile_definitions(test_volume_reconstruction PRIVATE CURAN_COPIED_RESOURCE_PATH="${post_build_resource_path}")
target_link_libraries(test_volume_reconstruction
PUBLIC
renderable
imageprocessing
${ITK_LIBRARIES}
)

add_executable(test_new_volume_reconstruction test_new_volume_reconstruction_api.cpp)

target_compile_definitions(test_new_volume_reconstruction PRIVATE vsgXchange_FOUND)
target_compile_definitions(test_new_volume_reconstruction PRIVATE CURAN_COPIED_RESOURCE_PATH="${post_build_resource_path}")
target_link_libraries(test_new_volume_reconstruction
PUBLIC
renderable
imageprocessing
${ITK_LIBRARIES}
)

add_executable(test_multithreaded_reconstruction test_multithreaded_volume_reconstruction.cpp)

target_compile_definitions(test_multithreaded_reconstruction PRIVATE vsgXchange_FOUND)
target_compile_definitions(test_multithreaded_reconstruction PRIVATE CURAN_COPIED_RESOURCE_PATH="${post_build_resource_path}")
target_link_libraries(test_multithreaded_reconstruction
PUBLIC
renderable
imageprocessing
${ITK_LIBRARIES}
)

add_executable(test_multithreaded_complex test_integrated_multithreaded_complex.cpp)

target_compile_definitions(test_multithreaded_complex PRIVATE vsgXchange_FOUND)
target_compile_definitions(test_multithreaded_complex PRIVATE CURAN_COPIED_RESOURCE_PATH="${post_build_resource_path}")
target_link_libraries(test_multithreaded_complex
PUBLIC
renderable
imageprocessing
${ITK_LIBRARIES}
)

add_executable(test_reconstruction_save_solution test_multithreaded_save_solution.cpp)

target_compile_definitions(test_reconstruction_save_solution PRIVATE vsgXchange_FOUND)
target_compile_definitions(test_reconstruction_save_solution PRIVATE CURAN_COPIED_RESOURCE_PATH="${post_build_resource_path}")
target_link_libraries(test_reconstruction_save_solution
PUBLIC
communication
renderable
imageprocessing
${ITK_LIBRARIES}
)

add_executable(test_clipping_reconstruction test_clipped_region.cpp)

target_compile_definitions(test_clipping_reconstruction PRIVATE vsgXchange_FOUND)
target_compile_definitions(test_clipping_reconstruction PRIVATE CURAN_COPIED_RESOURCE_PATH="${post_build_resource_path}")
target_link_libraries(test_clipping_reconstruction
PUBLIC
communication
renderable
imageprocessing
${ITK_LIBRARIES}
)

add_executable(test_reconstruction_common_image test_reconstruction_common_image.cpp)

target_compile_definitions(test_reconstruction_common_image PRIVATE vsgXchange_FOUND)
target_compile_definitions(test_reconstruction_common_image PRIVATE CURAN_COPIED_RESOURCE_PATH="${post_build_resource_path}")
target_link_libraries(test_reconstruction_common_image
PUBLIC
communication
renderable
imageprocessing
${ITK_LIBRARIES}
)

add_executable(test_reconstruction_itk_copy new_copy_of_registration.cpp)

target_compile_definitions(test_reconstruction_itk_copy PRIVATE vsgXchange_FOUND)
target_compile_definitions(test_reconstruction_itk_copy PRIVATE CURAN_COPIED_RESOURCE_PATH="${post_build_resource_path}")
target_link_libraries(test_reconstruction_itk_copy
PUBLIC
communication
renderable
imageprocessing
${ITK_LIBRARIES}
)

add_executable(test_benchmark_thesis test_benchmark_thesis.cpp)

target_compile_definitions(test_benchmark_thesis PRIVATE vsgXchange_FOUND)
target_compile_definitions(test_benchmark_thesis PRIVATE CURAN_COPIED_RESOURCE_PATH="${post_build_resource_path}")
target_link_libraries(test_benchmark_thesis
PUBLIC
communication
renderable
imageprocessing
${ITK_LIBRARIES}
)

add_executable(test_plus_benchmark_thesis test_plus_benchmark_thesis.cpp)

target_compile_definitions(test_plus_benchmark_thesis PRIVATE vsgXchange_FOUND)
target_compile_definitions(test_plus_benchmark_thesis PRIVATE CURAN_COPIED_RESOURCE_PATH="${post_build_resource_path}")
target_link_libraries(test_plus_benchmark_thesis
PUBLIC
communication
renderable
imageprocessing
${ITK_LIBRARIES}
)