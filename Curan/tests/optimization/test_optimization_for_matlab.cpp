#define _USE_MATH_DEFINES
#include <cmath>
#include "ceres/ceres.h"

const char model_parameters[] = "{ \"number_of_wires\":3, \"number_of_observations\" : 30, \"flange_data\" : [-0.040185463721125358, -0.93583868085023814, -0.35013010714590731, 0, -0.066602332908717365, 0.35214261283492709, -0.93357362295477642, 0, 0.99697003854510813, -0.014196606998752026, -0.076480053563582687, 0, 0.049951797388035429, -0.0014320882314497879, 0.35169203821721795, 1, -0.069065873828965757, -0.94223813877174145, -0.32774562531970697, 0, -0.026484094935603844, 0.33014608539925616, -0.943558241451469, 0, 0.99726049645400228, -0.056487628198672146, -0.047756152198489471, 0, 0.042552127787701982, 0.013375597979155184, 0.3481415120360446, 1, -0.10742566312894516, -0.94813645036296812, -0.2991604893605056, 0, 0.013674902970391339, 0.29946419977751132, -0.95400953353746165, 0, 0.99411906929203242, -0.10657609743617713, -0.019204466283073186, 0, 0.036607026880635662, 0.031039858399585014, 0.34400678885131003, 1, -0.15433731754820726, -0.95185135091709627, -0.26487543896957083, 0, 0.0515922934508487, 0.25995768884084119, -0.96424075586391289, 0, 0.98667027302362031, -0.16248386310593249, 0.0089870218463746349, 0, 0.032611539336571516, 0.051123597244127642, 0.33922879131381639, 1, -0.20865038078190506, -0.95165796059118779, -0.22541549335169325, 0, 0.084822901389011274, 0.21201054398152586, -0.973579274964606, 0, 0.97430492865402041, -0.22225808260686211, 0.03648630861576968, 0, 0.03103103139758806, 0.073084601859871756, 0.33377529518691207, 1, -0.26894218341615955, -0.94592987949800378, -0.18134708448784215, 0, 0.11092557131728417, 0.1566115361263585, -0.98141140424394724, 0, 0.95674741682812137, -0.284058954840424, 0.0628083638354243, 0, 0.0322528101190831, 0.096286507907953581, 0.32765296087802853, 1, -0.33350839912132235, -0.93327719817123789, -0.13328848070698684, 0, 0.12764861029231545, 0.095377399362143844, -0.98722286439352414, 0, 0.93406529750653577, -0.34626120641007141, 0.0873223735904409, 0, 0.036546647462670251, 0.12002318661489951, 0.3209153814456146, 1, -0.40039776306131697, -0.91267287385360818, -0.081913714769198676, 0, 0.1331150597463695, 0.030511784318067586, -0.9906308151306662, 0, 0.90662120657097689, -0.40755031143347675, 0.10927365394395022, 0, 0.044038413276032057, 0.14355402469679504, 0.31366659469967384, 1, -0.46748980031885035, -0.88355647361721479, -0.027950751813745449, 0, 0.12598665187312974, -0.035297113814218475, -0.99140379125066136, 0, 0.87497465686020881, -0.46699258204547345, 0.12781736254070286, 0, 0.054699786702887873, 0.16614528664274489, 0.30605983046647806, 1, -0.53260887945843993, -0.84590398405325629, 0.027825011857201543, 0, 0.10558719788421149, -0.099028504758326516, -0.98946687609454143, 0, 0.83974944189620371, -0.52406087910485966, 0.14206009230905114, 0, 0.068354873329070545, 0.18711134218541103, 0.29829165610519781, 1, -0.59366298635359116, -0.800254328421244, 0.084600641113406, 0, 0.071971993788195063, -0.15751181198032382, -0.9848908879651731, 0, 0.801488796393242, -0.57860438896515343, 0.15110483224031443, 0, 0.084701927333072524, 0.20584934629698581, 0.29059208044073226, 1, -0.64879201591550328, -0.74768711239462848, 0.14153763472405193, 0, 0.025938319050651873, -0.20761814934989942, -0.9778659967834803, 0, 0.76052358522870522, -0.63076040302123015, 0.15409474452871982, 0, 0.1033458525812922, 0.2218620760279833, 0.28321151325121363, 1, -0.69650867624136725, -0.68975129833633864, 0.19778475766305514, 0, -0.031018753563516174, -0.24643911548054431, -0.9686617569040975, 0, 0.71687760520737731, -0.68081635468348, 0.15025175655423711, 0, 0.1238353358097507, 0.2347658623489533, 0.27640569980318186, 1, -0.735818881308912, -0.62834432050021127, 0.25249552234530614, 0, -0.096778632388512045, -0.27146092364533292, -0.95757133585265175, 0, 0.6702271780689818, -0.72903524045738044, 0.13893576914869349, 0, 0.145695401822103, 0.24428714081571579, 0.27041393723549917, 1, -0.76635456085414111, -0.56542715636362884, 0.30494723790288136, 0, -0.16842764914223557, -0.2812403504774168, -0.94474123032064161, 0, 0.61994581542460314, -0.77536829707557675, 0.12029625857708034, 0, 0.16840048319386669, 0.25032605001253622, 0.2653153725335089, 1, -0.78831859723154318, -0.50283363276853688, 0.35455905998251941, 0, -0.24257769296540338, -0.27557990714732389, -0.93016760729035008, 0, 0.56542890988564976, -0.81927654215989143, 0.095268543245172782, 0, 0.19138393709692281, 0.25294562750098809, 0.26102702576812753, 1, -0.80234656373087621, -0.44225924696541585, 0.40080762236119993, 0, -0.31592865370702772, -0.25504861153726111, -0.9138595578751586, 0, 0.50638826747479038, -0.85985868852184, 0.06491500856798485, 0, 0.21409252792664918, 0.2522940335042882, 0.25744369397208133, 1, -0.80943344899987779, -0.38516973666926474, 0.44324007670143223, 0, -0.38545444535390466, -0.22092609762255622, -0.8958886816709889, 0, 0.44299250805975948, -0.89601112344847489, 0.030359585957748403, 0, 0.23599524436501865, 0.24860822668205976, 0.254456392186469, 1, -0.810838971799915, -0.33273443285102944, 0.48148515969421157, 0, -0.448566618880654, -0.17512450944763097, -0.8764242092826422, 0, 0.37593636461033508, -0.92661707484053546, -0.0072557823516766484, 0, 0.25659615853762519, 0.24222005312539274, 0.25196480152807205, 1, -0.8079796103662531, -0.28579663319420295, 0.51525647369757144, 0, -0.50325485031663808, -0.12006548837555386, -0.85575629365720585, 0, 0.30643678771514382, -0.95073895626296812, -0.04681807534303381, 0, 0.27545231088557381, 0.23355753290999204, 0.24988863919791629, 1, -0.80232046884248842, -0.24488244211530111, 0.54434773336537, 0, -0.54818720514245178, -0.058520512006228542, -0.83430578194846294, 0, 0.23616234542042691, -0.96778506871008041, -0.087289216901905414, 0, 0.29219353971240697, 0.22313881714663611, 0.2481769917442099, 1, -0.79527862375298242, -0.21024436539099015, 0.568620451112077, 0, -0.582756560691378, 0.006570255627260102, -0.81262022046719262, 0, 0.16711284083731714, -0.977626788995848, -0.12774646713294757, 0, 0.30654015767054738, 0.21155789574170486, 0.24681480620335997, 1, -0.78814604347761608, -0.1819320285179078, 0.58798516235525766, 0, -0.60706590459978449, 0.072280890905553952, -0.791357353085409, 0, 0.10147315715510585, -0.98065091128762971, -0.16741262965414705, 0, 0.31831422664686304, 0.19946293509383758, 0.245825998350711, 1, -0.78203537539540247, -0.15988028444150723, 0.6023777604436229, 0, -0.62185295292916, 0.1358637147051148, -0.77125868290724031, 0, 0.041467777411573634, -0.97774196272504843, -0.20567225812713366, 0, 0.32744088213588596, 0.18752963539323061, 0.24527296252146197, 1, -0.77784679274491508, -0.14400473366422567, 0.6117327878238541, 0, -0.62836182896071069, 0.19487660363619785, -0.7531165389635065, 0, -0.010760061412452213, -0.97019881778814576, -0.24207121894369149, 0, 0.33393748057059047, 0.17643281254008289, 0.24525259023587626, 1, -0.77624950980753016, -0.13429583974620118, 0.61595562011433236, 0, -0.62817477694064772, 0.24726215897345721, -0.73773835087743145, 0, -0.05322732511724218, -0.959596817505481, -0.27629838887372477, 0, 0.33788993709839721, 0.16681929378976129, 0.24588916137224628, 1, -0.77766805983755694, -0.13090456292770339, 0.61489542534742991, 0, -0.62301906477303171, 0.29137584398214367, -0.72591140125571152, 0, -0.084140558815751, -0.94760968386166289, -0.30814972564286464, 0, 0.33941714039249238, 0.15928414081093398, 0.24732460930751873, 1, -0.79923550177694036, -0.5245400120444863, 0.29339459515085209, 0, -0.46355950897108433, 0.22729469472549477, -0.85641678135831234, 0, 0.38253783386986639, -0.82048455044200219, -0.42481749980919603, 0, 0.21969576555175235, 0.2232181813229851, 0.30958155712987256, 1, -0.74917596923895269, -0.62830659289831892, 0.20968116852827257, 0, -0.40895157000636218, 0.18973611479181168, -0.89261347745428976, 0, 0.52105084253286371, -0.75447401019797522, -0.39909270530990459, 0, 0.18077077887539889, 0.23462975610983339, 0.31941765144826068, 1, -0.66783095453526276, -0.73558277207431821, 0.11366530513741276, 0, -0.33844747093429134, 0.16409742932333177, -0.92656642671081924, 0, 0.6629141162946387, -0.65725947624734593, -0.35854547173317186, 0, 0.13503547219618878, 0.23932771277986736, 0.32772857558839841, 1] , \"wire_image_position\" : [0.00918500545292561, 0.016051254013168464, -3.2742905609062234E-17, 0.04121530324981048, -0.060435082784467721, 1.0408340855860843E-17, -0.015649677083644675, -0.027348589326490872, -2.211772431870429E-17, 0.0098849857351955839, 0.016811675761514572, -5.9414279052205643E-17, 0.040024046118794579, -0.057441069283962823, -4.163336342344337E-17, -0.0154716924167324, -0.02631314635749895, -5.7245874707234634E-17, 0.010403763504372374, 0.017624918960958923, 2.9707139526102821E-17, 0.039078964581391651, -0.054411812931492283, 5.5511151231257827E-17, -0.015085457081339843, -0.025556132493390438, 3.7296554733501353E-17, 0.010708048847495023, 0.018511177439772226, -6.2016364266170854E-17, 0.038468349048096193, -0.051463708120588383, -2.0816681711721685E-17, -0.014497858292539892, -0.025062682396397421, -6.4401609045638963E-17, 0.010768534852912019, 0.019477654148162205, -3.2309224740068032E-17, 0.038243325457949347, -0.048657166381148059, -4.5102810375396984E-17, -0.013715605470801733, -0.024808186391361842, -3.3827107781547738E-17, 0.010559587280887598, 0.02051802884840434, -1.7347234759768071E-17, 0.038425358278969056, -0.046005798866857225, 6.9388939039072284E-18, -0.012743325459380049, -0.024761187387826043, -2.3852447794681098E-17, 0.010059890505252142, 0.021611988499727293, -7.32920668600201E-17, 0.039013171388692043, -0.043487725587722757, -3.8163916471489756E-17, -0.011583296863126341, -0.024884771704435184, -8.1965684239904135E-17, 0.00925445903404354, 0.022724880883450475, 7.37257477290143E-18, 0.039987392528758887, -0.041056501055473676, 2.7755575615628914E-17, -0.010236730563095446, -0.025136907714062389, -5.6378512969246231E-18, 0.0081381056519471175, 0.023808050795111561, -2.1684043449710089E-17, 0.041312872337641318, -0.038651156958238994, -5.2041704279304213E-18, -0.0087063699259192391, -0.025470509514425387, 1.7347234759768071E-18, 0.0067200454995607409, 0.024800766180919434, -3.1225022567582528E-17, 0.042939619505483112, -0.0362058274145611, -3.8163916471489756E-17, -0.0070000473953758073, -0.025834131438457749, -4.3368086899420177E-19, 0.005028764884424628, 0.025634700922453454, -6.7654215563095477E-17, 0.044803825715281187, -0.033659471510401863, -6.2450045135165055E-17, -0.0051345890612855072, -0.026174151699441133, -5.5511151231257827E-17, 0.003115691262583987, 0.026241525395048839, -6.5052130349130266E-17, 0.046830573459141045, -0.030965566646657023, -1.0234868508263162E-16, -0.0031391370998443912, -0.026438995067754118, -7.5460471204991109E-17, 0.0010558666540588118, 0.026563160163814162, 6.9388939039072284E-18, 0.048939402903130994, -0.028100641930185653, -2.0816681711721685E-17, -0.00105674654293714, -0.026585296130617324, 1.3877787807814457E-17, -0.0010558666540587994, 0.02656316016381418, 3.8163916471489756E-17, 0.051052895989005295, -0.025069950331048987, 3.4694469519536142E-18, 0.0010567465429371546, -0.026585296130617303, -8.6736173798840355E-19, -0.0031156912625841084, 0.026241525395048811, -1.9081958235744878E-17, 0.053108847658829623, -0.021912423488851258, -4.6837533851373792E-17, 0.0031391370998442476, -0.026438995067754115, -1.5612511283791264E-17, -0.00502876488442469, 0.025634700922453436, -3.3827107781547738E-17, 0.055073003837852109, -0.018688831888480372, -2.7755575615628914E-17, 0.005134589061285476, -0.026174151699441126, -1.8214596497756474E-17, -0.0067200454995607426, 0.024800766180919427, 1.1275702593849246E-17, 0.056939714296234747, -0.015462435462354457, -3.8163916471489756E-17, 0.0070000473953758229, -0.025834131438457753, -2.42861286636753E-17, -0.008138105651947088, 0.023808050795111568, -4.3368086899420177E-18, 0.058725612189479762, -0.012289862070611751, -8.6736173798840355E-18, 0.0087063699259192252, -0.025470509514425352, -9.540979117872439E-18, -0.009254459034043561, 0.022724880883450444, 1.7347234759768071E-17, 0.060460853654949819, -0.0092173143726510445, 0, 0.010236730563095469, -0.025136907714062368, -8.6736173798840355E-18, -0.010059890505252135, 0.021611988499727303, -5.2041704279304213E-18, 0.062179765114944642, -0.0062818178211475773, 1.214306433183765E-17, 0.011583296863126317, -0.024884771704435166, 2.6020852139652106E-17, -0.010559587280887643, 0.020518028848404337, 8.6736173798840355E-18, 0.063912009197729186, -0.0035165759087949248, -2.6020852139652106E-17, 0.012743325459380027, -0.024761187387826109, -2.42861286636753E-17, -0.010768534852911972, 0.01947765414816216, -1.9081958235744878E-17, 0.0656745363995528, -0.00095920640157562713, 2.2551405187698492E-17, 0.01371560547080173, -0.024808186391361828, -1.7347234759768071E-17, -0.010708048847495065, 0.018511177439772195, -9.540979117872439E-18, 0.067464065633175876, 0.0013383433277935025, -1.214306433183765E-17, 0.014497858292539826, -0.025062682396397473, -1.3010426069826053E-17, -0.010403763504372311, 0.017624918960958937, -6.7654215563095477E-17, 0.069249878744071389, 0.0032995479447113997, -2.7755575615628914E-17, 0.015085457081339921, -0.025556132493390445, -4.3368086899420177E-17, -0.0098849857351955926, 0.016811675761514582, -1.8214596497756474E-17, 0.070967430952259408, 0.0048147765689649982, 1.7347234759768071E-17, 0.015471692416732345, -0.026313146357498936, -3.4694469519536142E-18, -0.0091850054529256115, 0.016051254013168422, -6.9388939039072284E-18, 0.07251465741709974, 0.0057379041314859491, -8.6736173798840355E-18, 0.015649677083644668, -0.027348589326490893, 1.7347234759768071E-17, -0.0083416553427412068, 0.015311550283850906, 3.2959746043559335E-17, 0.073754541591400852, 0.0058929533077196738, 3.4694469519536142E-17, 0.015615658626064736, -0.028663368653380976, 4.6837533851373792E-17, -0.00055550810424335453, 0.0039717495811090421, 1.7238814542519521E-17, 0.057952072543026686, -0.036046131437543212, 2.7755575615628914E-17, 0.006539039546226217, -0.046752562888267429, 1.7347234759768071E-18, -0.00015645146596054478, 0.0020336829591888492, -1.599198204416119E-17, 0.054136688880337139, -0.043305110635124038, -3.4694469519536142E-18, 0.0037564648858222239, -0.048829575218023773, 1.0408340855860843E-17, -2.1145895207252445E-17, -1.0736617354315199E-18, -3.3052115240504E-17, 0.04999999999999994, -0.050771330594287241, -3.8163916471489756E-17, -1.0408340855860843E-17, -0.050771330594287248, -5.2041704279304213E-18] }";

#include "optimization/WireCalibration.h"

void function_1()
{
    constexpr size_t number_of_strings = 3;
    constexpr size_t number_of_variables = 6 + 4 * number_of_strings;
    double variables[number_of_variables];

    for (auto &val : variables)
        val = 0.0;

    curan::optim::WireData data;

    std::string s{model_parameters};
    std::stringstream stream;

    stream << s;
    stream >> data;

    auto val = *data.wire_data.begin();

    double residual[2] = {0.0, 0.0};
    curan::optim::PlaneInfo<double> local_plane;
    local_plane.update(&val, variables);
    curan::optim::compute_cost<double>(local_plane, val, residual);
    std::cout << "the cost of the wire geometry is: residual 1" << residual[0] << " residual 2 " << residual[1] << std::endl;

    ceres::Problem problem;
    for (const auto &data : data.wire_data)
    {
        ceres::CostFunction *cost_function =
            new ceres::AutoDiffCostFunction<curan::optim::WiredResidual, 2, number_of_variables>(
                new curan::optim::WiredResidual(data));
        problem.AddResidualBlock(cost_function, nullptr, variables);
    }

    ceres::Solver::Options options;
    options.max_num_iterations = 25;
    options.linear_solver_type = ceres::DENSE_QR;
    options.minimizer_progress_to_stdout = true;

    ceres::Solver::Summary summary;
    ceres::Solve(options, &problem, &summary);
    std::cout << summary.BriefReport() << "\n";
    std::cout << "Initial: \n";

    for (const auto &val : variables)
        std::cout << 0.0 << " , ";
    std::cout << "\n";
    std::cout << "Final: \n";
    for (const auto &val : variables)
        std::cout << val << " , ";
}

void function_2(double *images, double *transformations)
{
    constexpr size_t number_of_strings = 3;
    constexpr size_t number_of_variables = 6 + 4 * number_of_strings;
    double variables[number_of_variables];

    std::vector<Observation> observations;
    observations.resize(n_observations);

    for (auto &val : variables)
        val = 0.0;

    ceres::Problem problem;

    for (auto &observation : observations)
    {
        const double *image_pointer = images;
        const double *transformations_pointer = transformations;

        observation.flange_configuration.values[0] = *(transformations_pointer + 0);
        observation.flange_configuration.values[1] = *(transformations_pointer + 1);
        observation.flange_configuration.values[2] = *(transformations_pointer + 2);

        observation.flange_configuration.values[3] = *(transformations_pointer + 3);
        observation.flange_configuration.values[4] = *(transformations_pointer + 4);
        observation.flange_configuration.values[5] = *(transformations_pointer + 5);

        observation.flange_configuration.values[6] = *(transformations_pointer + 6);
        observation.flange_configuration.values[7] = *(transformations_pointer + 7);
        observation.flange_configuration.values[8] = *(transformations_pointer + 8);

        observation.flange_configuration.values[9] = *(transformations_pointer + 9);
        observation.flange_configuration.values[10] = *(transformations_pointer + 10);
        observation.flange_configuration.values[11] = *(transformations_pointer + 11);

        for (size_t wire_number = 0; wire_number < number_of_strings; ++wire_number, image_pointer += 3)
        {
            observation.wire_number = wire_number;
            observation.wire_data.values[0] = *(image_pointer + 0);
            observation.wire_data.values[1] = *(image_pointer + 1);
            observation.wire_data.values[2] = *(image_pointer + 2);
        }
        ceres::CostFunction *cost_function =
            new ceres::AutoDiffCostFunction<WiredResidual, 2, number_of_variables>(
                new WiredResidual(observation));
        problem.AddResidualBlock(cost_function, nullptr, variables);
        transformations += 3 * 4;
        images += number_of_strings*3;
    }

    ceres::Solver::Options options;
    options.max_num_iterations = max_iters;
    options.linear_solver_type = ceres::DENSE_QR;
    options.minimizer_progress_to_stdout = false;

    ceres::Solver::Summary summary;
    ceres::Solve(options, &problem, &summary);

    std::memcpy(solution, variables, sizeof(double) * number_of_variables);
}

int main()
{

    return 0;
}